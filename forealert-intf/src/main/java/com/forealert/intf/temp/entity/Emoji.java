package com.forealert.intf.temp.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion;
import com.forealert.intf.Constant;

import javax.xml.bind.annotation.XmlRootElement;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;

@JsonSerialize(include = Inclusion.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@XmlRootElement(name = "Emoji")
@DynamoDBTable(tableName="Emojis")
public class Emoji {

	private String emojiId;
	private String title;
	private String iconUrl;
	private String message;
	private Locale locale = Locale.US;
	private String lastModifiedDate;
	private String createdDate;
	private InfoExchangeAppEnum appId;
	private String groupId;


	@DynamoDBHashKey(attributeName="EmId")
	@DynamoDBAutoGeneratedKey
	public String getEmojiId() {
		return emojiId;
	}
	public void setEmojiId(String emojiId) {
		this.emojiId = emojiId;
	}

	@DynamoDBRangeKey(attributeName="ApId")
	public String getAppId() {
		if(appId == null) return InfoExchangeAppEnum.UN.name();

		return appId.name();
	}
	public void setAppId( String appId) {
		this.appId =  (appId == null ? InfoExchangeAppEnum.UN : InfoExchangeAppEnum.valueOf(appId));;
	}

	@DynamoDBAttribute(attributeName="TL")
	public String getTitle() {
		return title;
	}
	public void setTitle(String title) {
		this.title = title;
	}

	@DynamoDBIndexHashKey(globalSecondaryIndexName = "GId-EmId-index", attributeName = "GId")
	@DynamoDBRangeKey(attributeName="GId")
	public String getGroupId() {
		return groupId;
	}
	public void setGroupId(String groupId) {
		this.groupId = groupId;
	}

	@DynamoDBAttribute(attributeName="IU")
	public String getIconUrl() {
		return iconUrl;
	}
	public void setIconUrl(String iconUrl) {
		this.iconUrl = iconUrl;
	}

	@DynamoDBAttribute(attributeName="MSG")
	public String getMessage() {
		return message;
	}
	public void setMessage(String message) {
		this.message = message;
	}

	@DynamoDBAttribute(attributeName="LC")
	public Locale getLocale() {
		return locale;
	}
	public void setLocale(Locale locale) {
		this.locale = locale;
	}

	@DynamoDBAttribute(attributeName="LMD")
	public String getLastModifiedDate() {
		return lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		if(lastModifiedDate == null) lastModifiedDate = new Date();

		Constant.dateFormatter.setTimeZone(TimeZone.getTimeZone("UTC"));
		this.lastModifiedDate = Constant.dateFormatter.format(lastModifiedDate);
	}

	@DynamoDBAttribute(attributeName="CRD") 
	public String getCreatedDate() {
		return createdDate;
	}
	public void setCreatedDate(Date createdDate) {
		if(createdDate == null) createdDate = new Date();
        Constant.dateFormatter.setTimeZone(TimeZone.getTimeZone("UTC"));
		this.createdDate = Constant.dateFormatter.format(createdDate);
	}

	public void setCreatedDate(String createdDate) {
		this.createdDate = createdDate;
	}


	@Override
	public String toString() {
		return "Emoji [emojiId=" + emojiId + ", title=" + title + ", iconUrl=" + iconUrl + ", message=" + message
				+ ", locale=" + locale + ", lastModifiedDate=" + lastModifiedDate + ", createdDate=" + createdDate
				+ ", appId=" + appId + ", groupId=" + groupId + "]";
	}

	public static void main(String args[]) {
		Emoji e1 = new Emoji();
		e1.setAppId(InfoExchangeAppEnum.EMG_APP.name());
		e1.setTitle("Fire");
		e1.setMessage("To report smoke in your area. Please contact local police too");
		e1.setIconUrl("https://s3-us-west-1.amazonaws.com/forealert-bucket/emojis/gasmask.png");
		e1.setGroupId("GLOBAL");
		//InfoExchangeDBClient.save(e1);

		Emoji e2 = new Emoji();
		e2.setAppId(InfoExchangeAppEnum.EMG_APP.name());
		e2.setTitle("Loud noise");
		e2.setMessage("To report EMERGENCY  in your area. Please contact local police too");
		e2.setIconUrl("https://s3-us-west-1.amazonaws.com/forealert-bucket/emojis/medical_emergency.png");
		e2.setGroupId("ALL");
		//InfoExchangeDBClient.save(e2);

		List<Emoji> emojis = null;//InfoExchangeDBClient.findEmojisByGroupdId(InfoExchangeAppEnum.EMG_APP.name(),"GLOBAL");
		System.out.println(emojis);
		for(Emoji e:emojis) {
			Emoji e3 = null;//InfoExchangeDBClient.findEmojisById(e.getAppId(),e.getEmojiId());
			System.out.println(e3);
		}

	}

}
