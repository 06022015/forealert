package com.forealert.intf.temp.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion;
import com.forealert.intf.Constant;

import javax.xml.bind.annotation.XmlRootElement;
import java.util.Date;
import java.util.Set;
import java.util.TimeZone;

@JsonSerialize(include = Inclusion.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@XmlRootElement(name = "Admin")
@DynamoDBTable(tableName="Admin")
public class Admin {

	private String adminId;
	private String roleId;
	private Set<String> groupIds;
	private String googleUserId;
	private String userUuid;
	private Double latitude;
	private Double longitude;
	private String parentAdminId;
	private String createdDate;
	private String lastModifiedDate;
	
	@DynamoDBHashKey(attributeName="AId")
	@DynamoDBAutoGeneratedKey
	public String getAdminId() {
		return adminId;
	}
	public void setAdminId(String adminId) {
		this.adminId = adminId;
	}
	
	@DynamoDBRangeKey(attributeName="ARId")
	public String getRoleId() {
		return roleId;
	}
	public void setRoleId(String roleId) {
		this.roleId = roleId;
	}
	
	@DynamoDBAttribute(attributeName="AGId")
	public Set<String> getGroupIds() {
		return groupIds;
	}
	public void setGroupIds(Set<String> groupIds) {
		this.groupIds = groupIds;
	}
	
	@DynamoDBAttribute(attributeName="GUsId")
	public String getGoogleUserId() {
		return googleUserId;
	}
	public void setGoogleUserId(String googleUserId) {
		this.googleUserId = googleUserId;
	}
	
	@DynamoDBAttribute(attributeName="LAT")
	public Double getLatitude() {
		return latitude;
	}
	public void setLatitude(Double latitude) {
		this.latitude = latitude;
	}
	
	@DynamoDBAttribute(attributeName="LONGT")
	public Double getLongitude() {
		return longitude;
	}
	public void setLongitude(Double longitude) {
		this.longitude = longitude;
	}
	
	@DynamoDBIndexHashKey(globalSecondaryIndexName = "AId-PAId-index", attributeName = "PAId")
	@DynamoDBAttribute(attributeName="PAId")
	public String getParentAdminId() {
		return parentAdminId;
	}
	public void setParentAdminId(String parentAdminId) {
		this.parentAdminId = parentAdminId;
	}
	
	@DynamoDBAttribute(attributeName="CRD")
	public String getCreatedDate() {
		return createdDate;
	}
	public void setCreatedDate(Date createdDate) {
		if(createdDate == null) createdDate = new Date();
		Constant.dateFormatter.setTimeZone(TimeZone.getTimeZone("UTC"));
		this.createdDate = Constant.dateFormatter.format(createdDate);
	
	}
	
	public void setCreatedDate(String createdDate) {
		this.createdDate = createdDate;
	}
	public void setLastModifiedDate(String lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}
	@DynamoDBAttribute(attributeName="LMD")
	public String getLastModifiedDate() {
		return lastModifiedDate;
	}
	public void setLastModifiedDate(Date lastModifiedDate) {
		if(lastModifiedDate == null) lastModifiedDate = new Date();

        Constant.dateFormatter.setTimeZone(TimeZone.getTimeZone("UTC"));
		this.lastModifiedDate = Constant.dateFormatter.format(lastModifiedDate);
	
	}
	
	@DynamoDBAttribute(attributeName="UUuid")
	public String getUserUuid() {
		return userUuid;
	}
	public void setUserUuid(String userUuid) {
		this.userUuid = userUuid;
	}
	@Override
	public String toString() {
		return "Admin [adminId=" + adminId + ", roleId=" + roleId
				+ ", groupIds=" + groupIds + ", token=" + googleUserId + ", latitude="
				+ latitude + ", longitude=" + longitude + ", parentAdminId="
				+ parentAdminId + ", createdDate=" + createdDate
				+ ", lastModifiedDate=" + lastModifiedDate + "]";
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((adminId == null) ? 0 : adminId.hashCode());
		result = prime * result
				+ ((googleUserId == null) ? 0 : googleUserId.hashCode());
		result = prime * result
				+ ((userUuid == null) ? 0 : userUuid.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Admin other = (Admin) obj;
		if (adminId == null) {
			if (other.adminId != null)
				return false;
		} else if (!adminId.equals(other.adminId))
			return false;
		if (googleUserId == null) {
			if (other.googleUserId != null)
				return false;
		} else if (!googleUserId.equals(other.googleUserId))
			return false;
		if (userUuid == null) {
			if (other.userUuid != null)
				return false;
		} else if (!userUuid.equals(other.userUuid))
			return false;
		return true;
	}
	
	
}
